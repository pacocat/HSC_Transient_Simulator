%!PS-Adobe-2.0 EPSF-2.0
%%Title: temp.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Fri Jul 04 12:24:09 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
490 4872 M
63 0 V
6409 0 R
-63 0 V
stroke
406 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 (-20)]
] -46.7 MRshow
1.000 UL
LTb
490 3954 M
63 0 V
6409 0 R
-63 0 V
stroke
406 3954 M
[ [(Helvetica) 140.0 0.0 true true 0 (-19)]
] -46.7 MRshow
1.000 UL
LTb
490 3035 M
63 0 V
6409 0 R
-63 0 V
stroke
406 3035 M
[ [(Helvetica) 140.0 0.0 true true 0 (-18)]
] -46.7 MRshow
1.000 UL
LTb
490 2117 M
63 0 V
6409 0 R
-63 0 V
stroke
406 2117 M
[ [(Helvetica) 140.0 0.0 true true 0 (-17)]
] -46.7 MRshow
1.000 UL
LTb
490 1198 M
63 0 V
6409 0 R
-63 0 V
stroke
406 1198 M
[ [(Helvetica) 140.0 0.0 true true 0 (-16)]
] -46.7 MRshow
1.000 UL
LTb
490 280 M
63 0 V
6409 0 R
-63 0 V
stroke
406 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-15)]
] -46.7 MRshow
1.000 UL
LTb
490 280 M
0 63 V
0 4529 R
0 -63 V
stroke
490 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1299 280 M
0 63 V
0 4529 R
0 -63 V
stroke
1299 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.05)]
] -46.7 MCshow
1.000 UL
LTb
2108 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2108 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MCshow
1.000 UL
LTb
2917 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2917 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.15)]
] -46.7 MCshow
1.000 UL
LTb
3726 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3726 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
1.000 UL
LTb
4535 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4535 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.25)]
] -46.7 MCshow
1.000 UL
LTb
5344 280 M
0 63 V
0 4529 R
0 -63 V
stroke
5344 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.3)]
] -46.7 MCshow
1.000 UL
LTb
6153 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6153 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.35)]
] -46.7 MCshow
1.000 UL
LTb
6962 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6962 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
490 280 M
6472 0 V
0 4592 V
-6472 0 V
490 280 L
1.000 UP
1.000 UP
1.000 UL
LT0
2966 3375 M
0 -226 V
-31 226 R
62 0 V
-62 -226 R
62 0 V
749 1428 M
0 -18 V
-31 18 R
62 0 V
-62 -18 R
62 0 V
1865 2702 M
0 -79 V
-31 79 R
62 0 V
-62 -79 R
62 0 V
99 312 R
0 -55 V
-31 55 R
62 0 V
-62 -55 R
62 0 V
911 2874 M
0 -27 V
-31 27 R
62 0 V
-62 -27 R
62 0 V
486 -84 R
0 -112 V
-31 112 R
62 0 V
-62 -112 R
62 0 V
131 -24 R
0 -57 V
-31 57 R
62 0 V
-62 -57 R
62 0 V
1218 2465 M
0 -50 V
-31 50 R
62 0 V
-62 -50 R
62 0 V
665 1125 R
0 -31 V
-31 31 R
62 0 V
-62 -31 R
62 0 V
2998 3069 M
0 -147 V
-31 147 R
62 0 V
-62 -147 R
62 0 V
1461 2258 M
0 -44 V
-31 44 R
62 0 V
-62 -44 R
62 0 V
131 118 R
0 -44 V
-31 44 R
62 0 V
-62 -44 R
62 0 V
66 651 R
0 -33 V
-31 33 R
62 0 V
-62 -33 R
62 0 V
4163 4181 M
0 -91 V
-31 91 R
62 0 V
-62 -91 R
62 0 V
2432 3065 M
0 -72 V
-31 72 R
62 0 V
-62 -72 R
62 0 V
1299 2749 M
0 -37 V
-31 37 R
62 0 V
-62 -37 R
62 0 V
717 1197 M
0 -21 V
-31 21 R
62 0 V
-62 -21 R
62 0 V
244 992 R
0 -29 V
-31 29 R
62 0 V
stroke
961 2139 M
62 0 V
373 220 R
0 -36 V
-31 36 R
62 0 V
-62 -36 R
62 0 V
1005 936 R
0 -57 V
-31 57 R
62 0 V
-62 -57 R
62 0 V
1380 1863 M
0 -148 V
-31 148 R
62 0 V
-62 -148 R
62 0 V
357 1603 R
0 -40 V
-31 40 R
62 0 V
-62 -40 R
62 0 V
1118 503 R
0 -42 V
-31 42 R
62 0 V
-62 -42 R
62 0 V
228 27 R
0 -101 V
-31 101 R
62 0 V
-62 -101 R
62 0 V
1703 2642 M
0 -46 V
-31 46 R
62 0 V
-62 -46 R
62 0 V
212 -603 R
0 -147 V
-31 147 R
62 0 V
-62 -147 R
62 0 V
-484 589 R
0 -97 V
-31 97 R
62 0 V
-62 -97 R
62 0 V
1040 905 M
0 -66 V
-31 66 R
62 0 V
-62 -66 R
62 0 V
891 2527 R
0 -53 V
-31 53 R
62 0 V
-62 -53 R
62 0 V
1412 1681 M
0 -112 V
-31 112 R
62 0 V
-62 -112 R
62 0 V
4584 4390 M
0 -129 V
-31 129 R
62 0 V
-62 -129 R
62 0 V
1623 1593 M
0 -73 V
-31 73 R
62 0 V
-62 -73 R
62 0 V
4033 3723 M
0 -217 V
-31 217 R
62 0 V
-62 -217 R
62 0 V
2820 3056 M
0 -183 V
-31 183 R
62 0 V
-62 -183 R
62 0 V
1105 3798 M
0 -31 V
-31 31 R
62 0 V
-62 -31 R
62 0 V
1590 2673 M
0 -40 V
stroke
1559 2673 M
62 0 V
-62 -40 R
62 0 V
66 -406 R
0 -62 V
-31 62 R
62 0 V
-62 -62 R
62 0 V
795 35 R
0 -150 V
-31 150 R
62 0 V
-62 -150 R
62 0 V
1137 1974 M
0 -31 V
-31 31 R
62 0 V
-62 -31 R
62 0 V
260 1552 R
0 -33 V
-31 33 R
62 0 V
-62 -33 R
62 0 V
342 -511 R
0 -46 V
-31 46 R
62 0 V
-62 -46 R
62 0 V
1412 1876 M
0 -62 V
-31 62 R
62 0 V
-62 -62 R
62 0 V
895 2495 M
0 -16 V
-31 16 R
62 0 V
-62 -16 R
62 0 V
454 -605 R
0 -60 V
-31 60 R
62 0 V
-62 -60 R
62 0 V
697 912 R
0 -63 V
-31 63 R
62 0 V
-62 -63 R
62 0 V
1914 2112 M
0 -77 V
-31 77 R
62 0 V
-62 -77 R
62 0 V
1412 1763 M
0 -57 V
-31 57 R
62 0 V
-62 -57 R
62 0 V
2755 2871 M
0 -83 V
-31 83 R
62 0 V
-62 -83 R
62 0 V
34 -190 R
0 -112 V
-31 112 R
62 0 V
-62 -112 R
62 0 V
244 186 R
0 -177 V
-31 177 R
62 0 V
-62 -177 R
62 0 V
2415 3817 M
0 -68 V
-31 68 R
62 0 V
-62 -68 R
62 0 V
2027 2956 M
0 -44 V
-31 44 R
62 0 V
-62 -44 R
62 0 V
1768 2805 M
0 -43 V
-31 43 R
62 0 V
-62 -43 R
62 0 V
stroke
1946 3198 M
0 -59 V
-31 59 R
62 0 V
-62 -59 R
62 0 V
1542 2019 M
0 -96 V
-31 96 R
62 0 V
-62 -96 R
62 0 V
4228 4285 M
0 -184 V
-31 184 R
62 0 V
-62 -184 R
62 0 V
2901 2743 M
0 -106 V
-31 106 R
62 0 V
-62 -106 R
62 0 V
681 596 R
0 -388 V
-31 388 R
62 0 V
-62 -388 R
62 0 V
1315 2006 M
0 -48 V
-31 48 R
62 0 V
-62 -48 R
62 0 V
5263 4270 M
0 -108 V
-31 108 R
62 0 V
-62 -108 R
62 0 V
2966 3262 CircleF
749 1419 CircleF
1865 2662 CircleF
1995 2908 CircleF
911 2861 CircleF
1428 2707 CircleF
1590 2598 CircleF
1218 2440 CircleF
1914 3525 CircleF
2998 2996 CircleF
1461 2236 CircleF
1623 2310 CircleF
1720 2922 CircleF
4163 4135 CircleF
2432 3029 CircleF
1299 2730 CircleF
717 1186 CircleF
992 2154 CircleF
1396 2341 CircleF
2432 3231 CircleF
1380 1789 CircleF
1768 3298 CircleF
2917 3760 CircleF
3176 3716 CircleF
1703 2619 CircleF
1946 1919 CircleF
1493 2387 CircleF
1040 872 CircleF
1962 3339 CircleF
1412 1625 CircleF
4584 4326 CircleF
1623 1557 CircleF
4033 3615 CircleF
2820 2964 CircleF
1105 3783 CircleF
1590 2653 CircleF
1687 2196 CircleF
2513 2125 CircleF
1137 1959 CircleF
1428 3479 CircleF
1801 2928 CircleF
1412 1845 CircleF
895 2487 CircleF
1380 1844 CircleF
2108 2694 CircleF
1914 2074 CircleF
1412 1735 CircleF
2755 2829 CircleF
2820 2542 CircleF
3095 2583 CircleF
2415 3783 CircleF
2027 2934 CircleF
1768 2784 CircleF
1946 3168 CircleF
1542 1971 CircleF
4228 4193 CircleF
2901 2690 CircleF
3613 3039 CircleF
1315 1982 CircleF
5263 4216 CircleF
1.000 UL
LT1
LTb
6311 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (3.5sigma)]
] -46.7 MRshow
LT1
6395 4739 M
399 0 V
1857 280 M
8 13 V
81 120 V
81 115 V
81 109 V
81 104 V
81 99 V
81 96 V
81 91 V
81 88 V
80 84 V
81 82 V
81 79 V
81 76 V
81 74 V
81 71 V
81 70 V
81 68 V
81 65 V
80 65 V
81 61 V
81 61 V
81 59 V
81 58 V
81 56 V
81 55 V
81 54 V
81 53 V
81 51 V
81 51 V
80 50 V
81 47 V
81 48 V
81 47 V
81 46 V
81 45 V
81 44 V
81 43 V
81 42 V
81 43 V
80 40 V
81 40 V
81 41 V
81 38 V
81 40 V
81 37 V
81 38 V
81 37 V
81 36 V
81 36 V
80 35 V
81 35 V
81 34 V
81 34 V
81 34 V
81 33 V
81 32 V
81 33 V
81 32 V
81 31 V
80 31 V
81 30 V
81 31 V
81 30 V
81 29 V
1.000 UL
LT2
LTb
6311 4599 M
[ [(Helvetica) 140.0 0.0 true true 0 (5sigma)]
] -46.7 MRshow
LT2
6395 4599 M
399 0 V
1537 280 M
5 10 V
81 155 V
80 145 V
81 135 V
81 128 V
81 120 V
81 115 V
81 109 V
81 104 V
81 99 V
81 96 V
81 91 V
81 88 V
80 85 V
81 81 V
81 79 V
81 76 V
81 74 V
81 72 V
81 69 V
81 68 V
81 66 V
80 64 V
81 61 V
81 61 V
81 60 V
81 58 V
81 56 V
81 55 V
81 53 V
81 53 V
81 52 V
81 50 V
80 50 V
81 48 V
81 47 V
81 47 V
81 46 V
81 45 V
81 44 V
81 43 V
81 43 V
81 42 V
80 40 V
81 41 V
81 40 V
81 39 V
81 39 V
81 38 V
81 37 V
81 37 V
81 36 V
81 36 V
80 36 V
81 34 V
81 34 V
81 34 V
81 34 V
81 33 V
81 33 V
81 32 V
81 32 V
81 31 V
80 31 V
81 31 V
81 30 V
81 30 V
81 30 V
1.000 UL
LTb
490 280 M
6472 0 V
0 4592 V
-6472 0 V
490 280 L
1.000 UP
stroke
grestore
end
showpage
