#!/opt/local/bin/python"""# Written by Jun E. Okumura in 2014.02# contact paco.sci@gmail.com if you have any questions or comments.This code was used to sample SDSS-II SNe II.As described in Okumura+14 and in SNII_sampling.pdf, the authorused SDSS SNe II within z<0.17. Since fint high-z SNe II are not detectable, this code apply V/V_max method to the sample.The constructed SN-II luminosity functions are summarized in"SNIIsample_z017.txt""SNIIsample_z017_m02.txt""SNIIsample_z017_p02.txt"The mark 'm02' represents that this sample assumed limiting magnitude is0.2 mag brighter than fiducial limit, and the mark 'p02' represents the samplewith assumption of 0.2 mag fainter limiting magnitude."""import numpy as npfrom scipy import interpolatefrom pylab import plot,errorbar,savefig,clf,xlabel,ylabel,title,xlim,clf,figureimport mathimport cosmolopy.distance as cosmocd# assume cosmologycosmo = {'omega_M_0':0.3, 'omega_lambda_0':0.7, 'omega_k_0':0.0, 'h':0.7}def plot_hist(xlist,ylist):	dx = xlist[1]-xlist[0]	x, y = [], []	x.append(xlist[0]-0.5*dx)	y.append(0.0)	for i in range(len(xlist)):		x.append(xlist[i]-0.5*dx)		y.append(ylist[i])		x.append(xlist[i]+0.5*dx)		y.append(ylist[i])	x.append(xlist[-1]+0.5*dx)	y.append(0.0)	return np.array(x), np.array(y)def return_zmax(MV):	"""	This function return the zmax parameter (see Fig.1 of SNII_sampling.pdf)	"""	for i in range(len(SDSS_limit)-1):		if (SDSS_limit_MV[i] > MV) and (SDSS_limit_MV[i+1] < MV):			M1, M2 = SDSS_limit_MV[i], SDSS_limit_MV[i+1]			z1, z2 = SDSS_limit[i,0], SDSS_limit[i+1,0]			zmax = (z1 - z2)/(M1 - M2) * (MV - M1) + z1			return min(zmax,0.17)	return 0.17def make_hist(SNII):	"""	This function load SDSS-II SN II sample and form tables with 3 column.	The third column is the fraction of comoving volume, V_zmax/V_z0.17.	"""	MVhist = []	for MV in np.arange(-15.6, -19.0, -dM):		dSNII = SNII['MV'][np.where(SNII['MV'] <= MV+0.5*dM)[0]]		dSNII = dSNII[np.where(dSNII > MV-0.5*dM)[0]]		NSDSS = len(dSNII)		zmax = return_zmax(MV)		V_zmax = cosmocd.comoving_volume(zmax, **cosmo)		f_zmax = V_zmax/V17		MVhist.append([MV,NSDSS,f_zmax])	return np.array(MVhist)V20 = cosmocd.comoving_volume(0.20, **cosmo) # comoving volume at z=0.20 [Mpc^3]V17 = cosmocd.comoving_volume(0.17, **cosmo) # comoving volume at z=0.17 [Mpc^3]dM = 0.2 # histogram bin sizeoffset = 0.0# set +0.2/-0.2 to make SDSS_MV_z017_p02/SDSS_MV_z017_m02# load SN II samplesSNII = np.loadtxt('SNII_V.txt', dtype = {'names': ('SDSSID', 'redshift', 'MV', 'm', 'error'), 'formats': ('S7','f8','f8','f8','f8')})SNII_z017 = np.loadtxt('SNIIsample_z017.txt',dtype = {'names': ('SDSSID', 'redshift', 'MV', 'm', 'error'),'formats': ('S7','f8','f8','f8','f8')})# load limiting magnitude (this file was made by Yutaka Ihara)# you need to put -0.6 offset to derive 5-sigma limit.SDSS_limit = np.loadtxt('lim_V.txt')SDSS_limit_MV = SDSS_limit[:,1] - 0.6 + offset# make dataN_z017 = make_hist(SNII_z017)# plot histogramx_z017, y_z017 = plot_hist(N_z017[:,0], N_z017[:,1]) # raw numberx_corr, y_corr = plot_hist(N_z017[:,0], N_z017[:,1]/N_z017[:,2]) # corrected numberfill_between(x_corr, y_corr, color='green', alpha=0.5)fill_between(x_z017, y_z017, color='blue', alpha=0.5)legend(('raw sample (z<0.17)','corrected sample'),frameon=False)xlim(-15.5, -19.0)xlabel(r'Absolute Magnitude, $M_V$', fontsize=15)ylabel('Number', fontsize=15)if offset == 0.0:	savefig('SDSS_MV_z017.png',bbox_inches='tight',pad_inches=0.05)elif offset == 0.2:	savefig('SDSS_MV_z017_p02.png',bbox_inches='tight',pad_inches=0.05)elif offset == -0.2:	savefig('SDSS_MV_z017_m02.png',bbox_inches='tight',pad_inches=0.05)clf()# plot SN-II sample distribution (this is figure10 of Okumura+14)fig=figure(figsize=(3.543,5.314))rcParams['legend.fontsize']='7.5'rcParams['legend.labelspacing']='0.0'rect_hist=[0.135,0.1,0.834,0.40]rect_z=[0.135,0.6,0.834,0.38]ax_z=axes(rect_z)xticks(fontsize=8)yticks(fontsize=8)xlabel('redshift',fontsize=9)ylabel('Absolute Magnitude $M_V$',fontsize=8)errorbar(SNII['redshift'], SNII['MV'], yerr = SNII['error'], fmt = 'o', color = 'black', markersize = 3, capsize = 2)plot(SDSS_limit[:,0],SDSS_limit[:,1]-0.7,'k:')xlim(0,0.17)ylim(-15, -20)xticks([0.00,0.05,0.10,0.15,0.20], ('0','0.05','0.10','0.15','0.20'))ax_hist=axes(rect_hist)xticks(fontsize=8)yticks(fontsize=8)xlabel('Absolute Magnitude $M_V$',fontsize=8)ylabel('Number',fontsize=8)fill_between(x_corr, y_z017, y_corr, color='lightblue')fill_between(x_z017, y_z017, color='lightgray')plot(x_corr,y_corr,'-',color='lightblue')plot(x_z017,y_z017,'-',color='lightgray')ax_hist.legend(('corrected sample','raw sample'),frameon=False)xlim(-15.5, -19.0)savefig('figure10.eps',bbox_inches='tight',pad_inches=0.05)